# coding=utf-8
from pytg.sender import Sender
from pytg.receiver import Receiver
from pytg.utils import coroutine
from collections import deque
from time import time, sleep
from getopt import getopt
from datetime import datetime
import sys
import re
import _thread
import random
import pytz

# username –∏–≥—Ä–æ–≤–æ–≥–æ –±–æ—Ç–∞
bot_username = 'ChatWarsBot'

# –≤–∞—à username –∏–ª–∏ username —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–ø—Ä–æ—Å—ã —ç—Ç–æ–º—É —Å–∫—Ä–∏–ø—Ç—É
admin_username = ''

# username –±–æ—Ç–∞ –∏/–∏–ª–∏ —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∏–∫–∞–∑—ã
order_usernames = ''

# –∏–º—è –∑–∞–º–∫–∞
castle_name = 'blue'

captcha_bot = 'ChatWarsCaptchaBot'

# –ø—É—Ç—å –∫ —Å–æ–∫–µ—Ç —Ñ–∞–π–ª—É
socket_path = ''

# —Ö–æ—Å—Ç —á—Ç–æ–± —Å–ª—É—à–∞—Ç—å telegram-cli
host = 'localhost'

# –ø–æ—Ä—Ç –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Å–ª—É—à–∞—Ç—å
port = 1338

# —Å–∫–∏–¥—ã–≤–∞–Ω–∏–µ –¥–µ–Ω–µ–≥ –ø–æ–∫—É–ø–∫–æ–π/–ø—Ä–æ–¥–∞–∂–µ–π —à–ª–µ–º–æ–≤
donate_buying = False

# –≤–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–∫–∞—á–∫—É –ø—Ä–∏ –ª–µ–≤–µ–ª–∞–ø–µ
lvl_up = 'lvl_off'

opts, args = getopt(sys.argv[1:], 'a:o:c:s:h:p:g:b:l', ['admin=', 'order=', 'castle=', 'socket=', 'host=', 'port=', 'gold=', 'buy=', 'lvlup='])

for opt, arg in opts:
    if opt in ('-a', '--admin'):
        admin_username = arg
    elif opt in ('-o', '--order'):
        order_usernames = arg.split(',')
    elif opt in ('-c', '--castle'):
        castle_name = arg
    elif opt in ('-s', '--socket'):
        socket_path = arg
    elif opt in ('-h', '--host'):
        host = arg
    elif opt in ('-p', '--port'):
        port = int(arg)
    elif opt in ('-g', '--gold'):
        gold_to_left = int(arg)
    elif opt in ('-b', '--buy'):
        donate_buying = bool(arg)
    elif opt in ('-l', '--lvlup'):
        lvl_up = arg        

orders = {
    'red': 'üáÆüá≤',
    'black': 'üá¨üáµ',
    'white': 'üá®üáæ',
    'yellow': 'üáªüá¶',
    'blue': 'üá™üá∫',
    'mint': 'üá≤üá¥',
    'twilight': 'üá∞üáÆ',
    'lesnoi_fort': 'üå≤–õ–µ—Å–Ω–æ–π —Ñ–æ—Ä—Ç',
    'les': 'üå≤–õ–µ—Å',
    'gorni_fort': '‚õ∞–ì–æ—Ä–Ω—ã–π —Ñ–æ—Ä—Ç',
    'gora': '‚õ∞',
    'cover': 'üõ° –ó–∞—â–∏—Ç–∞',
    'attack': '‚öî –ê—Ç–∞–∫–∞',
    'cover_symbol': 'üõ°',
    'hero': 'üèÖ–ì–µ—Ä–æ–π',
    'corovan': '/go',
    'peshera': 'üï∏–ü–µ—â–µ—Ä–∞',
    'quests': 'üó∫ –ö–≤–µ—Å—Ç—ã',
    'castle_menu': 'üè∞–ó–∞–º–æ–∫',
    'lavka': 'üèö–õ–∞–≤–∫–∞',
    'snaraga': '–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ',
    'shlem': '–®–ª–µ–º',
    'sell': '–°–∫—É–ø–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤',
    'lvl_def': '+1 üõ°–ó–∞—â–∏—Ç–∞',
    'lvl_atk': '+1 ‚öîÔ∏è–ê—Ç–∞–∫–∞',
    'lvl_off': '–í—ã–∫–ª—é—á–µ–Ω',
    'kirka': '/on_119',
    'rapira': '/on_103'
    
}

captcha_answers = {
    # –±–ª—è–¥—å, –∫–æ–ª—å—Ü–æ–≤, –Ω—É –∏ —Ö—É–π–Ω—é –∂–µ —Ç—ã –ø—Ä–∏–¥—É–º–∞–ª
    'watermelon_n_cherry': 'üçâüçí',
    'bread_n_cheese': 'üçûüßÄ',
    'cheese': 'üßÄ',
    'pizza': 'üçï',
    'hotdog': 'üå≠',
    'eggplant_n_carrot': 'üçÜü•ï',
    'dog': 'üêï',
    'horse': 'üêé',
    'goat': 'üêê',
    'cat': 'üêà',
    'pig': 'üêñ',
    'squirrel': 'üêø'
}

arena_cover = ['üõ°–≥–æ–ª–æ–≤—ã', 'üõ°–∫–æ—Ä–ø—É—Å–∞', 'üõ°–Ω–æ–≥']
arena_attack = ['üó°–≤ –≥–æ–ª–æ–≤—É', 'üó°–ø–æ –∫–æ—Ä–ø—É—Å—É', 'üó°–ø–æ –Ω–æ–≥–∞–º']
# –ø–æ–º–µ–Ω—è—Ç—å blue –Ω–∞ red, black, white, yellow –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–≥–æ –∑–∞–º–∫–∞
castle = orders[castle_name]
# —Ç–µ–∫—É—â–∏–π –ø—Ä–∏–∫–∞–∑ –Ω–∞ –∞—Ç–∞–∫—É/–∑–∞—â–∏—Ç—É, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ–≥–¥–∞ –∑–∞—â–∏—Ç–∞, —Ç—Ä–æ–≥–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ
current_order = {'time': 0, 'order': castle}

sender = Sender(sock=socket_path) if socket_path else Sender(host=host,port=port)
action_list = deque([])
log_list = deque([], maxlen=30)
lt_arena = 0
get_info_diff = 360
hero_message_id = 0
last_captcha_id = 0
gold_to_left = 0

bot_enabled = True
arena_enabled = False
les_enabled = False
peshera_enabled = True
corovan_enabled = True
order_enabled = True
auto_def_enabled = True
donate_enabled = False
arena_running = False
arena_delay = False
arena_delay_day = -1
tz = pytz.timezone('Europe/Moscow')

@coroutine
def work_with_message(receiver):
    while True:
        msg = (yield)
        try:
            if msg['event'] == 'message' and 'text' in msg and msg['peer'] is not None:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —é–∑–µ—Ä–Ω–µ–π–º–∞, —á—Ç–æ–±—ã –Ω–µ –≤—ã–≤–∞–ª–∏–≤–∞–ª—Å—è Exception
                if 'username' in msg['sender']:
                    parse_text(msg['text'], msg['sender']['username'], msg['id'])
        except Exception as err:
            log('–û—à–∏–±–∫–∞ coroutine: {0}'.format(err))


def queue_worker():
    global get_info_diff
    global arena_delay
    global arena_delay_day
    global tz
    lt_info = 0
    # –≥—Ä–µ–±–∞–Ω–∞—è –º–∞–≥–∏—è
    print(sender.contacts_search(bot_username))
    print(sender.contacts_search(captcha_bot))
    sleep(3)
    while True:
        try:
            if time() - lt_info > get_info_diff:
                if arena_delay and arena_delay_day != datetime.now(tz).day:
                    arena_delay = False
                lt_info = time()
                get_info_diff = random.randint(500, 800)
                if bot_enabled:
                    send_msg(bot_username, orders['hero'])
                continue

            if len(action_list):
                log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º ' + action_list[0])
                send_msg(bot_username, action_list.popleft())
            sleep_time = random.randint(2, 5)
            sleep(sleep_time)
        except Exception as err:
            log('–û—à–∏–±–∫–∞ –æ—á–µ—Ä–µ–¥–∏: {0}'.format(err))


def parse_text(text, username, message_id):
    global lt_arena
    global hero_message_id
    global bot_enabled
    global arena_enabled
    global les_enabled
    global peshera_enabled
    global corovan_enabled
    global order_enabled
    global auto_def_enabled
    global donate_enabled
    global donate_buying
    global last_captcha_id
    global arena_delay
    global arena_delay_day
    global tz
    global arena_running
    global lvl_up
    if bot_enabled and username == bot_username:
        log('–ü–æ–ª—É—á–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞. –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è')

        if text.find('üåü–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å!') != -1 and lvl_up != 'lvl_off':
            log('–ø–æ–ª—É—á–∏–ª–∏ —É—Ä–æ–≤–µ–Ω—å - {0}'.format(orders[lvl_up]))
            action_list.append('/level_up')
            action_list.append(orders[lvl_up])

        elif "–ù–∞ –≤—ã—Ö–æ–¥–µ –∏–∑ –∑–∞–º–∫–∞ –æ—Ö—Ä–∞–Ω–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç" in text:
            # send_msg(admin_username, "–ö–æ–º–∞–Ω–¥–∏—Ä, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–∞–ø—á–æ–π! #captcha " + '|'.join(captcha_answers.keys()))
            # fwd(admin_username, message_id)
            action_list.clear()
            bot_enabled = False
            last_captcha_id = message_id
            fwd(captcha_bot, message_id)

        elif '–ù–µ —É–º–Ω–∏—á–∞–π!' in text or '–¢—ã –¥–æ–ª–≥–æ –¥—É–º–∞–ª, –∞–∂ –≤—Å–ø–æ—Ç–µ–ª –æ—Ç –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è' in text:
            send_msg(admin_username, "–ö–æ–º–∞–Ω–¥–∏—Ä, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–∞–ø—á–æ–π! #captcha " + '|'.join(captcha_answers.keys()))
            bot_enabled = False
            if last_captcha_id != 0:
                fwd(admin_username, message_id)
            else:
                send_msg(admin_username, '–ö–∞–ø—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞?')

        elif '–ù–∞ —Å–µ–≥–æ–¥–Ω—è —Ç—ã —É–∂–µ —Å–≤–æ—ë –æ—Ç–≤–æ–µ–≤–∞–ª. –ü—Ä–∏—Ö–æ–¥–∏ –∑–∞–≤—Ç—Ä–∞.' in text:
            arena_delay = True
            arena_delay_day = datetime.now(tz).day
            log("–û—Ç–¥—ã—Ö–∞–µ–º –¥–µ–Ω–µ–∫ –æ—Ç –∞—Ä–µ–Ω—ã")
            arena_running = False

        elif corovan_enabled and text.find(' /go') != -1:
            action_list.append(orders['corovan'])

        elif text.find('–ë–∏—Ç–≤–∞ —Å–µ–º–∏ –∑–∞–º–∫–æ–≤ —á–µ—Ä–µ–∑') != -1:
            hero_message_id = message_id
            m = re.search('–ë–∏—Ç–≤–∞ —Å–µ–º–∏ –∑–∞–º–∫–æ–≤ —á–µ—Ä–µ–∑(?: ([0-9]+)—á){0,1}(?: ([0-9]+)){0,1}', text)
            if not m.group(1):
                if m.group(2) and int(m.group(2)) <= 20:
                    state = re.search('–°–æ—Å—Ç–æ—è–Ω–∏–µ:\\n(.*)$', text)
                    if auto_def_enabled and time() - current_order['time'] > 1080:
                        if donate_enabled:
                            gold = int(re.search('üí∞([0-9]+)', text).group(1))
                            inv = re.search('üéí–†—é–∫–∑–∞–∫: ([0-9]+)/([0-9]+)', text)
                            log('–†—é–∫–∑–∞–∫: {0} / {1}'.format(inv.group(1),inv.group(2)))
                            if int(inv.group(1)) == int(inv.group(2)):
                                log('–ü–æ–ª–Ω—ã–π —Ä—é–∫–∑–∞–∫ - –î–æ–Ω–∞—Ç –≤ –ª–∞–≤–∫—É –æ—Ç–∫–ª—é—á–µ–Ω')
                                donate_buying = False          
                            if gold > gold_to_left:
                                if donate_buying:
                                    log('–î–æ–Ω–∞—Ç {0} –∑–æ–ª–æ—Ç–∞ –≤ –ª–∞–≤–∫—É'.format(gold-gold_to_left))
                                    action_list.append(orders['castle_menu'])
                                    action_list.append(orders['lavka'])
                                    action_list.append(orders['shlem'])
                                    while (gold-gold_to_left)>35:
                                        gold=gold-35
                                        action_list.append('/buy_helmet2')
                                    while (gold-gold_to_left)>0:
                                        gold=gold-1
                                        action_list.append('/buy_helmet1')
                                        action_list.append('/sell_206')
                                else:
                                    log('–î–æ–Ω–∞—Ç {0} –∑–æ–ª–æ—Ç–∞ –≤ –∫–∞–∑–Ω—É –∑–∞–º–∫–∞'.format(gold-gold_to_left))
                                    action_list.append('/donate {0}'.format(gold-gold_to_left))
                        action_list.append(orders['rapira'])
                        update_order(castle)
                    return
            log('–í—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ')
            gold = int(re.search('üí∞([0-9]+)', text).group(1))
            endurance = int(re.search('–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: ([0-9]+)', text).group(1))
            log('–ó–æ–ª–æ—Ç–æ: {0}, –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: {1}'.format(gold, endurance))
            inv = re.search('üéí–†—é–∫–∑–∞–∫: ([0-9]+)/([0-9]+)', text)
            log('–†—é–∫–∑–∞–∫: {0} / {1}'.format(inv.group(1),inv.group(2)))
            if peshera_enabled and endurance >= 2 and text.find('üõå–û—Ç–¥—ã—Ö') != -1:
                if les_enabled:
                    action_list.append(orders['quests'])
                    action_list.append(random.choice([orders['peshera'], orders['les']]))
                else:
                    action_list.append(orders['kirka'])
                    action_list.append(orders['quests'])
                    action_list.append(orders['peshera'])
            elif les_enabled and not peshera_enabled and endurance >= 1 and orders['les'] not in action_list and text.find('üõå–û—Ç–¥—ã—Ö') != -1:
                action_list.append(orders['kirka'])
                action_list.append(orders['quests'])
                action_list.append(orders['les'])
            elif arena_enabled and not arena_delay and gold >= 5 and not arena_running and text.find('üõå–û—Ç–¥—ã—Ö') != -1:
                curhour = datetime.now(tz).hour
                if 9 <= curhour <= 23:
                    log('–í–∫–ª—é—á–∞–µ–º —Ñ–ª–∞–≥ - –∞—Ä–µ–Ω–∞ –∑–∞–ø—É—â–µ–Ω–∞')
                    arena_running = True
                    if gold < 5:
                        if gold <= 0:
                            action_list.append(orders['nitki3'])
                        if 0 < gold < 3:
                            action_list.append(orders['nitki2'])
                        if 2 < gold < 5:
                            action_list.append(orders['nitki'])
                    action_list.append(orders['rapira'])
                    action_list.append(orders['castle_menu'])
                    action_list.append('üìØ–ê—Ä–µ–Ω–∞')
                    action_list.append('üîé–ü–æ–∏—Å–∫ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞')
                    log('–¢–æ–ø–∞–µ–º –Ω–∞ –∞—Ä–µ–Ω—É')
                else:
                    log('–ü–æ —á–∞—Å–∞–º –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏–º –Ω–∞ –∞—Ä–µ–Ω—É. –°–µ–π—á–∞—Å ' + str(curhour) + ' —á–∞—Å–æ–≤')

        elif arena_enabled and text.find('–≤—ã–±–µ—Ä–∏ —Ç–æ—á–∫—É –∞—Ç–∞–∫–∏ –∏ —Ç–æ—á–∫—É –∑–∞—â–∏—Ç—ã') != -1:
            arena_running = True #–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –∞—Ä–µ–Ω–∞ –∑–∞–ø—É—â–µ–Ω–∞ —Ä—É–∫–∞–º–∏
            lt_arena = time()
            attack_chosen = arena_attack[random.randint(0, 2)]
            cover_chosen = arena_cover[random.randint(0, 2)]
            log('–ê—Ç–∞–∫–∞: {0}, –ó–∞—â–∏—Ç–∞: {1}'.format(attack_chosen, cover_chosen))
            action_list.append(attack_chosen)
            action_list.append(cover_chosen)

        elif text.find('–ü–æ–±–µ–¥–∏–ª –≤–æ–∏–Ω') != -1 or text.find('–ù–∏—á—å—è') != -1:
            log('–í—ã–∫–ª—é—á–∞–µ–º —Ñ–ª–∞–≥ - –∞—Ä–µ–Ω–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å')
            arena_running = False

    elif username == 'ChatWarsCaptchaBot':
        if len(text) <= 4 and text in captcha_answers.values():
            sleep(3)
            action_list.append(text)
            bot_enabled = True

    else:
        if bot_enabled and order_enabled and username in order_usernames:
            if text.find(orders['red']) != -1:
                update_order(orders['red'])
            elif text.find(orders['black']) != -1:
                update_order(orders['black'])
            elif text.find(orders['white']) != -1:
                update_order(orders['white'])
            elif text.find(orders['yellow']) != -1:
                update_order(orders['yellow'])
            elif text.find(orders['blue']) != -1:
                update_order(orders['blue'])
            elif text.find(orders['mint']) != -1:
                update_order(orders['mint'])
            elif text.find(orders['twilight']) != -1:
                update_order(orders['twilight'])
            elif text.find('üå≤') != -1:
                update_order(orders['lesnoi_fort'])
            elif text.find('‚õ∞') != -1:
                update_order(orders['gorni_fort'])
            elif text.find('üõ°') != -1:
                update_order(castle)

        # send_msg(admin_username, '–ü–æ–ª—É—á–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É ' + current_order['order'] + ' –æ—Ç ' + username)
        if username == admin_username:
            if text == '#help':
                send_msg(admin_username, '\n'.join([
                    '#enable_bot - –í–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞',
                    '#disable_bot - –í—ã–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞',
                    '#enable_arena - –í–∫–ª—é—á–∏—Ç—å –∞—Ä–µ–Ω—É',
                    '#disable_arena - –í—ã–∫–ª—é—á–∏—Ç—å –∞—Ä–µ–Ω—É',
                    '#enable_les - –í–∫–ª—é—á–∏—Ç—å –ª–µ—Å',
                    '#disable_les - –í—ã–∫–ª—é—á–∏—Ç—å –ª–µ—Å',
                    '#enable_peshera - –í–∫–ª—é—á–∏—Ç—å –ø–µ—â–µ—Ä—ã',
                    '#disable_peshera - –í—ã–∫–ª—é—á–∏—Ç—å –ø–µ—â–µ—Ä—ã',
                    '#enable_corovan - –í–∫–ª—é—á–∏—Ç—å –∫–æ—Ä–æ–≤–∞–Ω',
                    '#disable_corovan - –í—ã–∫–ª—é—á–∏—Ç—å –∫–æ—Ä–æ–≤–∞–Ω',
                    '#enable_order - –í–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–∫–∞–∑—ã',
                    '#disable_order - –í—ã–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–∫–∞–∑—ã',
                    '#enable_auto_def - –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ –¥–µ—Ñ',
                    '#disable_auto_def - –í—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ –¥–µ—Ñ',
                    '#enable_donate - –í–∫–ª—é—á–∏—Ç—å –¥–æ–Ω–∞—Ç',
                    '#disable_donate - –í—ã–∫–ª—é—á–∏—Ç—å –¥–æ–Ω–∞—Ç',
                    '#enable_buy - –í–∫–ª—é—á–∏—Ç—å –¥–æ–Ω–∞—Ç –≤ –ª–∞–≤–∫—É –≤–º–µ—Å—Ç–æ –∫–∞–∑–Ω—ã',
                    '#disable_buy - –í—ã–ª—é—á–∏—Ç—å –¥–æ–Ω–∞—Ç –≤ –ª–∞–≤–∫—É –≤–º–µ—Å—Ç–æ –∫–∞–∑–Ω—ã',
                    "#lvl_atk - –∫–∞—á–∞—Ç—å –∞—Ç–∞–∫—É",
                    "#lvl_def - –∫–∞—á–∞—Ç—å –∑–∞—â–∏—Ç—É",
                    "#lvl_off - –Ω–∏—á–µ–≥–æ –Ω–µ –∫–∞—á–∞—Ç—å",
                    '#status - –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å',
                    '#hero - –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–µ—Ä–æ–µ',
                    '#push_order - –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–∫–∞–∑ ({0})'.format(','.join(orders)),
                    '#order - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞—â–∏—Ç—ã/–∞—Ç–∞–∫–∏ –∑–∞–º–∫–∞',
                    '#log - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –ª–æ–≥–∞',
                    '#time - –î–µ–±–∞–≥, —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è',
                    '#lt_arena - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω—è—è –±–∏—Ç–≤–∞ –Ω–∞ –∞—Ä–µ–Ω–µ',
                    '#get_info_diff - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω—è—è —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–µ—Ä–æ–µ',
                    '#ping - –î–µ–±–∞–≥, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∂–∏–≤ –ª–∏ –±–æ—Ç',
                ]))

            # –í–∫–ª/–≤—ã–∫–ª –±–æ—Ç–∞
            elif text == '#enable_bot':
                bot_enabled = True
                send_msg(admin_username, '–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            elif text == '#disable_bot':
                bot_enabled = False
                send_msg(admin_username, '–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            # –í–∫–ª/–≤—ã–∫–ª –∞—Ä–µ–Ω—ã
            elif text == '#enable_arena':
                arena_enabled = True
                send_msg(admin_username, '–ê—Ä–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω–∞')
            elif text == '#disable_arena':
                arena_enabled = False
                send_msg(admin_username, '–ê—Ä–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω–∞')

            # –í–∫–ª/–≤—ã–∫–ª –ª–µ—Å–∞
            elif text == '#enable_les':
                les_enabled = True
                send_msg(admin_username, '–õ–µ—Å —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            elif text == '#disable_les':
                les_enabled = False
                send_msg(admin_username, '–õ–µ—Å —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            # –í–∫–ª/–≤—ã–∫–ª –ø–µ—â–µ—Ä—ã
            elif text == '#enable_peshera':
                peshera_enabled = True
                send_msg(admin_username, '–ü–µ—â–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω—ã')
            elif text == '#disable_peshera':
                peshera_enabled = False
                send_msg(admin_username, '–ü–µ—â–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω—ã')

            # –í–∫–ª/–≤—ã–∫–ª –∫–æ—Ä–æ–≤–∞–Ω–∞
            elif text == '#enable_corovan':
                corovan_enabled = True
                send_msg(admin_username, '–ö–æ—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω—ã')
            elif text == '#disable_corovan':
                corovan_enabled = False
                send_msg(admin_username, '–ö–æ—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω—ã')

            # –í–∫–ª/–≤—ã–∫–ª –∫–æ–º–∞–Ω–¥
            elif text == '#enable_order':
                order_enabled = True
                send_msg(admin_username, '–ü—Ä–∏–∫–∞–∑—ã —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω—ã')
            elif text == '#disable_order':
                order_enabled = False
                send_msg(admin_username, '–ü—Ä–∏–∫–∞–∑—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω—ã')

            # –í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ –¥–µ—Ñ
            elif text == '#enable_auto_def':
                auto_def_enabled = True
                send_msg(admin_username, '–ê–≤—Ç–æ –¥–µ—Ñ —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            elif text == '#disable_auto_def':
                auto_def_enabled = False
                send_msg(admin_username, '–ê–≤—Ç–æ –¥–µ—Ñ —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            # –í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ –¥–æ–Ω–∞—Ç
            elif text == '#enable_donate':
                donate_enabled = True
                send_msg(admin_username, '–î–æ–Ω–∞—Ç —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            elif text == '#disable_donate':
                donate_enabled = False
                send_msg(admin_username, '–î–æ–Ω–∞—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            # –í–∫–ª/–≤—ã–∫–ª –¥–æ–Ω–∞—Ç –≤ –ª–∞–≤–∫—É
            elif text == '#enable_buy':
                donate_buying = True
                send_msg(admin_username, '–î–æ–Ω–∞—Ç –≤ –ª–∞–≤–∫—É —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            elif text == '#disable_buy':
                donate_buying = False
                send_msg(admin_username, '–î–æ–Ω–∞—Ç –≤ –ª–∞–≤–∫—É —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            # —á—Ç–æ –∫–∞—á–∞—Ç—å –ø—Ä–∏ –ª–µ–≤–µ–ª–∞–ø–µ
            elif text == '#lvl_atk':
                lvl_up = 'lvl_at'
                send_msg(admin_username, '–ö–∞—á–∞–µ–º –∞—Ç–∞–∫—É')
            elif text == '#lvl_def':
                lvl_up = 'lvl_def'
                send_msg(admin_username, '–ö–∞—á–∞–µ–º –∑–∞—â–∏—Ç—É')
            elif text == '#lvl_off':
                lvl_up = 'lvl_off'
                send_msg(admin_username, '–ù–µ –∫–∞—á–∞–µ–º –Ω–∏—á–µ–≥–æ')

            # –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å
            elif text == '#status':
                send_msg(admin_username, '\n'.join([
                    'ü§ñ–ë–æ—Ç –≤–∫–ª—é—á–µ–Ω: {0}',
                    'üìØ–ê—Ä–µ–Ω–∞ –≤–∫–ª—é—á–µ–Ω–∞: {1}',
                    'üîé–°–µ–π—á–∞—Å –Ω–∞ –∞—Ä–µ–Ω–µ: {2}',
                    'üå≤–õ–µ—Å –≤–∫–ª—é—á–µ–Ω: {3}',
                    'üï∏–ü–µ—â–µ—Ä—ã –≤–∫–ª—é—á–µ–Ω—ã: {4}',
                    'üê´–ö–æ—Ä–æ–≤–∞–Ω—ã –≤–∫–ª—é—á–µ–Ω—ã: {5}',
                    'üá™üá∫–ü—Ä–∏–∫–∞–∑—ã –≤–∫–ª—é—á–µ–Ω—ã: {6}',
                    'üõ°–ê–≤—Ç–æ –¥–µ—Ñ –≤–∫–ª—é—á–µ–Ω: {7}',
                    'üí∞–î–æ–Ω–∞—Ç –≤–∫–ª—é—á–µ–Ω: {8}',
                    'üèö–î–æ–Ω–∞—Ç –≤ –ª–∞–≤–∫—É –≤–º–µ—Å—Ç–æ –∫–∞–∑–Ω—ã: {9}',
                    'üåü–õ–µ–≤–µ–ª–∞–ø: {10}',
                ]).format(bot_enabled, arena_enabled, arena_running, les_enabled, peshera_enabled, corovan_enabled, order_enabled, 
                          auto_def_enabled, donate_enabled, donate_buying,orders[lvl_up]))

            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–µ—Ä–æ–µ
            elif text == '#hero':
                if hero_message_id == 0:
                    send_msg(admin_username, '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–µ—Ä–æ–µ –ø–æ–∫–∞ –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')
                else:
                    fwd(admin_username, hero_message_id)

            # –ü–æ–ª—É—á–∏—Ç—å –ª–æ–≥
            elif text == '#log':
                send_msg(admin_username, '\n'.join(log_list))
                log_list.clear()

            elif text == '#lt_arena':
                send_msg(admin_username, str(lt_arena))

            elif text == '#order':
                text_date = datetime.fromtimestamp(current_order['time']).strftime('%Y-%m-%d %H:%M:%S')
                send_msg(admin_username, current_order['order'] + ' ' + text_date)

            elif text == '#time':
                text_date = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                send_msg(admin_username, text_date)

            elif text == '#ping':
                send_msg(admin_username, '#pong')

            elif text == '#get_info_diff':
                send_msg(admin_username, str(get_info_diff))

            elif text.startswith('#push_order'):
                command = text.split(' ')[1]
                if command in orders:
                    update_order(orders[command])
                    send_msg(admin_username, '–ö–æ–º–∞–Ω–¥–∞ ' + command + ' –ø—Ä–∏–º–µ–Ω–µ–Ω–∞')
                else:
                    send_msg(admin_username, '–ö–æ–º–∞–Ω–¥–∞ ' + command + ' –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞')

            elif text.startswith('#captcha'):
                command = text.split(' ')[1]
                if command in captcha_answers:
                    action_list.append(captcha_answers[command])
                    bot_enabled = True
                    send_msg(admin_username, '–ö–æ–º–∞–Ω–¥–∞ ' + command + ' –ø—Ä–∏–º–µ–Ω–µ–Ω–∞')
                else:
                    send_msg(admin_username, '–ö–æ–º–∞–Ω–¥–∞ ' + command + ' –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞')


def send_msg(to, message):
    sender.send_msg('@' + to, message)


def fwd(to, message_id):
    sender.fwd('@' + to, message_id)


def update_order(order):
    current_order['order'] = order
    current_order['time'] = time()
    if order == castle:
        action_list.append(orders['cover'])
    else:
        action_list.append(orders['attack'])
    action_list.append(order)


def log(text):
    message = '{0:%Y-%m-%d %H:%M:%S}'.format(datetime.now()) + ' ' + text
    print(message)
    log_list.append(message)


if __name__ == '__main__':
    receiver = Receiver(sock=socket_path) if socket_path else Receiver(port=port)
    receiver.start()  # start the Connector.
    _thread.start_new_thread(queue_worker, ())
    receiver.message(work_with_message(receiver))
    receiver.stop()
